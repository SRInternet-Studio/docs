import{_ as a,c as t,o as i,ae as e}from"./chunks/framework.58IBamlh.js";const g=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"faststart.md","filePath":"faststart.md"}'),n={name:"faststart.md"};function l(p,s,o,r,h,d){return i(),t("div",null,s[0]||(s[0]=[e(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>理论上全平台通用, 安装了 <a href="https://www.python.org" target="_blank" rel="noreferrer">Python</a> &gt;= <strong>3.9</strong> 即可 (建议: <strong>3.10+</strong>)</p><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h2><ol><li>Clone 本仓库 (建议先 Fork / Use this template)</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/SRInternet-Studio/Jianer_QQ_bot.git</span></span></code></pre></div><ol start="2"><li>安装依赖 <a href="https://github.com/SRInternet-Studio/Jianer_QQ_bot/blob/main/requirements.txt" target="_blank" rel="noreferrer">requirements.txt</a></li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p>国内服务器可使用清华源或者其他源，例如</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre></div><ol start="3"><li>安装 <strong>VC++</strong></li></ol><p>有一些用户的 Windows 系统中可能没有 <code>Visual C++ Redistributable</code> 会导致 PySide6 报错：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from Shiboken6.Shiboken import</span></span>
<span class="line"><span>ImportError: DLL load failed while importing Shiboken: 找不到指定的模块</span></span></code></pre></div><p>可以通过 <a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170" target="_blank" rel="noreferrer">安装 Visual C++ Redistributable</a> 解决此类问题。</p><p>请注意，如果您的电脑系统是 Linux 或已经安装 <code>Visual C++ Redistributable</code> ，则无需重复安装或修复。</p><ol start="4"><li><strong>配置设置</strong></li></ol><p>启动设置向导</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SetupWizard.pyw</span></span></code></pre></div><p>然后，打开 <strong>核对并应用设置</strong> 页面，点击 <strong>应用</strong> ，看到页面标题显示 “已成功保存” 即表面设置核验无问题，并已经保存。</p><p>若出现错误，请浏览下方的设置内容文本框找到报错详细信息，并根据报错提示修改您的配置。</p><p><strong>建议完成其中的每一个条目以确保程序能正常运行。</strong></p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>Linux (没有桌面) 的用户可先在 Windows 上启动配置程序,保存配置后将根目录下的 <code>appsettings.json</code> <code>config.json</code> 和 <code>prerequisites.py</code> 复制到服务器即可</p></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>本仓库有两个分支 &quot;main&quot; 与 &quot;no＿wizard&quot; , 两个分支的更新频率可能不同。请注意在 &quot;no＿wizard&quot; 分支中没有设置向导，用户可以从 &quot;main&quot; 分支下拉取 <code>wizardWindowz</code> 和 <code>UI</code> 文件夹以及 <code>SetupWizard.pyw</code> ，这些是设置向导及其必要文件。设置向导的更新规则为向后兼容，因此旧版设置向导在新版中同样适用。</p></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><ol><li>启动协议端</li></ol><p>如果您是 Windows 用户，请双击 <code>Lagrange.OneBot.exe</code>；</p><p>如果您是 Linux 用户，请在程序根目录处打开终端，运行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./Lagrange.OneBot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./Lagrange.OneBot</span></span></code></pre></div><h4 id="登录协议端" tabindex="-1">登录协议端 <a class="header-anchor" href="#登录协议端" aria-label="Permalink to &quot;登录协议端&quot;">​</a></h4><p>首次打开协议端或者上次退出登录之后需要登录你的QQ账号。</p><p>请等待协议端的命令提示符窗口显示一个二维码，立即使用手机进行扫码登录，并勾选<strong>下次自动登录</strong>，即可完成机器人QQ账号绑定。</p><h4 id="退出登录协议端" tabindex="-1">退出登录协议端 <a class="header-anchor" href="#退出登录协议端" aria-label="Permalink to &quot;退出登录协议端&quot;">​</a></h4><p>请关闭简儿和协议端的命令提示符窗口，然后在QQ机器人的根目录下，删除所有 <code>.db</code> 文件，即算作退出登录。下次启动协议端，请参照上一点进行登录。</p><ol start="2"><li>启动主程序</li></ol><p>在 <code>SetupWizard.pyw</code> 中打开 <strong>核对并应用设置</strong> 页面，点击 <strong>启动吧，我的简儿！</strong> 即可启动主程序。<strong>注意不要关闭主程序和协议端的命令提示符窗口</strong></p><p>或者，您也可以在程序根目录打开终端，并执行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><p>看到 ℹ️ INFO 成功建立连接 的日志，即表明与协议端对接成功。</p><p>ℰ𝓃𝒿ℴ𝓎 It!</p>`,38)]))}const k=a(n,[["render",l]]);export{g as __pageData,k as default};
